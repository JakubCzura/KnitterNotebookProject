<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AddMovieUrl" xml:space="preserve">
    <value>Add movie's url</value>
  </data>
  <data name="AddPhoto" xml:space="preserve">
    <value>Add photo</value>
  </data>
  <data name="AddProjectPhoto" xml:space="preserve">
    <value>Add project's photo</value>
  </data>
  <data name="AddSample" xml:space="preserve">
    <value>Add sample</value>
  </data>
  <data name="ApplicationTheme" xml:space="preserve">
    <value>Application's theme</value>
  </data>
  <data name="ApplicationWillShutDown" xml:space="preserve">
    <value>Application will shut down</value>
  </data>
  <data name="ChoosePdfFileWithPattern" xml:space="preserve">
    <value>Choose .pdf file with pattern</value>
  </data>
  <data name="ChoosePhoto" xml:space="preserve">
    <value>Choose photo</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="DatabaseError" xml:space="preserve">
    <value>Database error</value>
  </data>
  <data name="DeleteLink" xml:space="preserve">
    <value>Delete link</value>
  </data>
  <data name="DeletePdfFileWithPattern" xml:space="preserve">
    <value>Delete .pdf file with pattern</value>
  </data>
  <data name="DeletePhoto" xml:space="preserve">
    <value>Delete photo</value>
  </data>
  <data name="DeleteProject" xml:space="preserve">
    <value>Delete project</value>
  </data>
  <data name="DeleteSample" xml:space="preserve">
    <value>Delete sample</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DontHaveAccount" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="ErrorWhileAddingMovieUrl" xml:space="preserve">
    <value>Error while adding movie's url</value>
  </data>
  <data name="ErrorWhileAddingProjectPhoto" xml:space="preserve">
    <value>Error while adding project's photo</value>
  </data>
  <data name="ErrorWhileDeletingFinishedProject" xml:space="preserve">
    <value>Error while deleting finished project</value>
  </data>
  <data name="ErrorWhileDeletingFinishedProjectPhoto" xml:space="preserve">
    <value>Error while deleting finished project's photo</value>
  </data>
  <data name="ErrorWhileDeletingMovieUrl" xml:space="preserve">
    <value>Error while deleting movie's url</value>
  </data>
  <data name="ErrorWhileDeletingPlannedProject" xml:space="preserve">
    <value>Error while deleting planned project</value>
  </data>
  <data name="ErrorWhileDeletingProjectInProgress" xml:space="preserve">
    <value>Error while deleting project in progress</value>
  </data>
  <data name="ErrorWhileDeletingProjectInProgressPhoto" xml:space="preserve">
    <value>Error while deleting project in progress photo</value>
  </data>
  <data name="ErrorWhileDeletingSample" xml:space="preserve">
    <value>Error while deleting sample</value>
  </data>
  <data name="ErrorWhileFinishingProjectInProgress" xml:space="preserve">
    <value>Error while finishing project in progress</value>
  </data>
  <data name="ErrorWhileMovingFinishedProjectToProjectsInProgress" xml:space="preserve">
    <value>Error while moving finished project to projects in progress</value>
  </data>
  <data name="ErrorWhileMovingProjectInProgressToPlannedProjects" xml:space="preserve">
    <value>Error while moving project in progress to planned projects</value>
  </data>
  <data name="ErrorWhileOpeningMovieInWebBrowser" xml:space="preserve">
    <value>Error while opening movie in web browser</value>
  </data>
  <data name="ErrorWhilePlanningNewProject" xml:space="preserve">
    <value>Error while planning new project</value>
  </data>
  <data name="ErrorWhileSigninIn" xml:space="preserve">
    <value>Error while signing in</value>
  </data>
  <data name="ErrorWhileStartingPlannedProject" xml:space="preserve">
    <value>Error while starting planned project</value>
  </data>
  <data name="FilterByNeedleSize" xml:space="preserve">
    <value>Filter by needle's size</value>
  </data>
  <data name="FilterByProjectName" xml:space="preserve">
    <value>Filter by project's name</value>
  </data>
  <data name="FinishedProject" xml:space="preserve">
    <value>Finished project</value>
  </data>
  <data name="FinishedProjects" xml:space="preserve">
    <value>Finished projects</value>
  </data>
  <data name="FinishProject" xml:space="preserve">
    <value>Finish project</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="InvalidLoginCredentials" xml:space="preserve">
    <value>Invalid login credentials</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="LoopsQuantity" xml:space="preserve">
    <value>Loops quantity</value>
  </data>
  <data name="LoopsXRows" xml:space="preserve">
    <value>Loops x rows</value>
  </data>
  <data name="MoveToPlannedProjects" xml:space="preserve">
    <value>Move to planned projects</value>
  </data>
  <data name="MoveToProjectsInProgress" xml:space="preserve">
    <value>Move to projects in progress</value>
  </data>
  <data name="Needles" xml:space="preserve">
    <value>Needles</value>
  </data>
  <data name="NeedleSize" xml:space="preserve">
    <value>Needle's size</value>
  </data>
  <data name="NewEmail" xml:space="preserve">
    <value>New e-mail</value>
  </data>
  <data name="NewMovieUrlAdded" xml:space="preserve">
    <value>New movie's url added</value>
  </data>
  <data name="NewNickname" xml:space="preserve">
    <value>New nickname</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NewProjectPlanned" xml:space="preserve">
    <value>New project planned</value>
  </data>
  <data name="NewTheme" xml:space="preserve">
    <value>New theme</value>
  </data>
  <data name="NiceToSeeYou" xml:space="preserve">
    <value>Nice to see you</value>
  </data>
  <data name="NotYetSpecified" xml:space="preserve">
    <value>Not yet specified</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PdfWithPattern" xml:space="preserve">
    <value>Pdf with pattern</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="Photos" xml:space="preserve">
    <value>Photos</value>
  </data>
  <data name="Placeholder_CommaSeparatedNames" xml:space="preserve">
    <value>Comma-separated names, e.g.: w1 , w2 , w3</value>
  </data>
  <data name="Placeholder_Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Placeholder_Nickname" xml:space="preserve">
    <value>Nickname</value>
  </data>
  <data name="Placeholder_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Placeholder_PasswordResetToken" xml:space="preserve">
    <value>Password reset token</value>
  </data>
  <data name="Placeholder_RepeatNewPassword" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="Placeholder_TypeDescription" xml:space="preserve">
    <value>Type description</value>
  </data>
  <data name="Placeholder_TypeLink" xml:space="preserve">
    <value>Type link</value>
  </data>
  <data name="Placeholder_TypeLoopsQuantity" xml:space="preserve">
    <value>Type loops quantity</value>
  </data>
  <data name="Placeholder_TypeNeedleSize" xml:space="preserve">
    <value>Type needle's size</value>
  </data>
  <data name="Placeholder_TypeNewEmail" xml:space="preserve">
    <value>Type new email</value>
  </data>
  <data name="Placeholder_TypeNewNickname" xml:space="preserve">
    <value>Type new nickname</value>
  </data>
  <data name="Placeholder_TypeNewPassword" xml:space="preserve">
    <value>Type new password</value>
  </data>
  <data name="Placeholder_TypeProjectName" xml:space="preserve">
    <value>Type project's name</value>
  </data>
  <data name="Placeholder_TypeRowsQuantity" xml:space="preserve">
    <value>Type rows quantity</value>
  </data>
  <data name="Placeholder_TypeTitle" xml:space="preserve">
    <value>Type title</value>
  </data>
  <data name="Placeholder_TypeYarnName" xml:space="preserve">
    <value>Type yarn's name</value>
  </data>
  <data name="PlannedProject" xml:space="preserve">
    <value>Planned project</value>
  </data>
  <data name="PlannedProjects" xml:space="preserve">
    <value>Planned projects</value>
  </data>
  <data name="PlanOutProject" xml:space="preserve">
    <value>Plan out project</value>
  </data>
  <data name="PlayMovie" xml:space="preserve">
    <value>Play movie</value>
  </data>
  <data name="ProjectInProgress" xml:space="preserve">
    <value>Project in progress</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Project's name</value>
  </data>
  <data name="ProjectsInProgress" xml:space="preserve">
    <value>Projects in progress</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="RowsQuantity" xml:space="preserve">
    <value>Rows quantity</value>
  </data>
  <data name="Samples" xml:space="preserve">
    <value>Samples</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShowPattern" xml:space="preserve">
    <value>Show pattern</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StartProject" xml:space="preserve">
    <value>Start project</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TypeEmail" xml:space="preserve">
    <value>Type e-mail</value>
  </data>
  <data name="TypeNewLoginCredentials" xml:space="preserve">
    <value>Type new login credentials</value>
  </data>
  <data name="UserAccount" xml:space="preserve">
    <value>User's account</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="WelcomeToKnitterNotebook" xml:space="preserve">
    <value>Welcome to Knitter Notebook</value>
  </data>
  <data name="WeWillSendPasswordResetToken" xml:space="preserve">
    <value>We will send you token necessary to reset your password</value>
  </data>
  <data name="YarnName" xml:space="preserve">
    <value>Yarn's name</value>
  </data>
  <data name="Yarns" xml:space="preserve">
    <value>Yarns</value>
  </data>
  <data name="YarnsNames" xml:space="preserve">
    <value>YarnsNames</value>
  </data>
</root>